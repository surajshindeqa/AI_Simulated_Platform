name: Playwright Tests

on:
  push:
    branches:
      - main  # Trigger the workflow on push to main branch
  pull_request:
    branches:
      - main  # Trigger the workflow on pull request to main branch

jobs:
  test:
    runs-on: ubuntu-latest  # Use Ubuntu runner

    steps:
      # Checkout the code from the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '23'  # Specify your desired Node.js version

      # Install dependencies
      - name: Install dependencies
        run: |
          npm install
          npm install -g playwright  # Ensure playwright is installed globally

      # Set up Google TTS and other dependencies (Ensure ffmpeg is installed)
      - name: Install additional dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg
          npm install fluent-ffmpeg google-tts-api node-fetch axios
          
      # Get the latest added Playwright test file
      - name: Get latest test file
        id: get_latest_test
        run: |
          # Get the most recent Playwright test file added
          LATEST_TEST_FILE=$(git diff --name-only HEAD^..HEAD | grep -E '.*\.spec\.ts$' | sort | tail -n 1)
          echo "Latest test file: $LATEST_TEST_FILE"
          echo "::set-output name=latest_test::$LATEST_TEST_FILE"

      # Run the latest Playwright test if it exists
      - name: Run latest Playwright test
        run: |
          if [ -z "${{ steps.get_latest_test.outputs.latest_test }}" ]; then
            echo "No new Playwright test found."
          else
            npx playwright test ${{ steps.get_latest_test.outputs.latest_test }}
          fi

      # Optionally, add steps to save test results or send notifications
      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: playwright-test-results
          path: test-results
